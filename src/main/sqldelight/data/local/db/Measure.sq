CREATE TABLE Measure (
    id INTEGER PRIMARY KEY,
    goalId INTEGER NOT NULL,
    name TEXT NOT NULL,
    description TEXT NOT NULL,
    scheduledDateTime TEXT NOT NULL,
    isCompleted INTEGER NOT NULL DEFAULT 0, -- SQLite doesn't have a boolean type, so we use INTEGER (0 = false, 1 = true)
    syncStatus TEXT NOT NULL DEFAULT 'SYNCED', -- SYNCED, PENDING_CREATE, PENDING_UPDATE, PENDING_DELETE
    FOREIGN KEY (goalId) REFERENCES Goal(id)
);

-- Get all measures
getAllMeasures:
SELECT * FROM Measure WHERE syncStatus != 'PENDING_DELETE';

-- Get measures for a goal
getMeasuresByGoal:
SELECT * FROM Measure WHERE goalId = ? AND syncStatus != 'PENDING_DELETE';

-- Get a measure by ID
getMeasureById:
SELECT * FROM Measure WHERE id = ? AND syncStatus != 'PENDING_DELETE';

-- Insert a new measure
insertMeasure:
INSERT INTO Measure(id, goalId, name, description, scheduledDateTime, isCompleted, syncStatus)
VALUES (?, ?, ?, ?, ?, ?, ?);

-- Update an existing measure
updateMeasure:
UPDATE Measure
SET goalId = ?, name = ?, description = ?, scheduledDateTime = ?, isCompleted = ?, syncStatus = ?
WHERE id = ?;

-- Mark a measure for deletion
markMeasureForDeletion:
UPDATE Measure
SET syncStatus = 'PENDING_DELETE'
WHERE id = ?;

-- Delete a measure
deleteMeasure:
DELETE FROM Measure
WHERE id = ?;

-- Get all measures that need to be synced
getMeasuresToSync:
SELECT * FROM Measure WHERE syncStatus != 'SYNCED';

-- Update sync status
updateSyncStatus:
UPDATE Measure
SET syncStatus = ?
WHERE id = ?;